You are a high-performing YouTube growth strategist and title-copywriting expert.

👉 Task:
For each of the following YouTube video titles or topics, generate:
- 1️⃣ A reworked, high-CTR YouTube **Title**
- 2️⃣ A **Thumbnail Text Hook** (2–4 words max, designed for visual impact)
- 3️⃣ An optional **Question-style Opening Hook** to use in video intro or caption.

🎯 Use these rules:
- Titles must create curiosity or tension. Use words like: “Why”, “How”, “Stop”, “Mistake”, “Breaks”, “Fix”, “Hidden”, etc.
- Use power emojis to enhance clarity (🔥, ❌, 🤯, 🧠, 🛑, etc.)
- Thumbnail text should be bold, visual, and minimal — as if it will be shown over a video image.

---

🎬 INPUT TOPICS:
1.
package main

import "fmt"

func main() {
	// Array with fixed size
	var arr = [3]int{1, 2, 3}
	fmt.Println("Array:", arr)

	// Slice derived from array
	slice := arr[:]
	fmt.Println("Slice:", slice)

	// Modify array and see impact on slice
	arr[0] = 100
	fmt.Println("Modified Array:", arr)
	fmt.Println("Slice reflects change:", slice)
}





Give the output in a table format.

=============

2.
package main

import "fmt"

func main() {
	// Declare a slice using shorthand
	numbers := []int{10, 20}
	fmt.Println("Initial Slice:", numbers)

	// Append new elements dynamically
	numbers = append(numbers, 30, 40)
	fmt.Println("After Append:", numbers)

	// Slices grow dynamically; arrays cannot
}





==============
3.
package main

import "fmt"

func main() {
	// Array occupies exact space for 5 elements
	arr := [5]string{"a", "b", "c", "d", "e"}

	// Slice from index 1 to 3 (excluding 4)
	slice := arr[1:4]
	fmt.Println("Original Array:", arr)
	fmt.Println("Slice:", slice)
	fmt.Printf("Slice len: %d, cap: %d\n",
		len(slice), cap(slice))

	// Append to slice
	slice = append(slice, "z")
	fmt.Println("After Append:", slice)
}



