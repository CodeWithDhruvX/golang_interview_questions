package main

import "fmt"

type Person struct {
	Name string
	Age  int
}

func areEqual(p1, p2 Person) bool {
	return p1.Name == p2.Name && p1.Age == p2.Age
}

func main() {
	a := Person{Name: "Bob", Age: 25}
	b := Person{Name: "Bob", Age: 25}

	fmt.Println("Structs equal:", areEqual(a, b))
}







📽️ youtube-script SCRIPT STRUCTURE

(Code snippets, walkthroughs, demos)

🎙 Format:
- Go **line by line**, explaining what each part does.
- Avoid reading the code word-for-word — instead, explain the **intention** behind each part.
- Use phrases like:
  - “Here we’re creating a function that...”
  - “This line connects to the DB and checks if...”
- Relate to real-world examples:
  - “This is exactly how login validation works in a MERN app.”
  - “In a freelance project, you'd use this to format form data before submission.”

🚩 Bonus:
- Point out 1 common beginner mistake or confusion here — and clarify it.

📌 End with:
> “You’ll see this pattern again and again in interviews and projects — so make sure this part is crystal clear.”

---

🎬 OUTRO SLIDE (Recap + Retention Trigger)
🎙 Use this for the **final slide** of the video:

1. **Quick recap** of what they just learned:
   - “So now you understand what [topic] is, how it works, and how to use it in real-world code.”

2. **Trigger curiosity** for the next video:
   - “In the next video, we’ll build a real feature using this — like an actual signup system.”

3. **Reassure and encourage**:
   - “If you understood this, you’re already ahead of most beginners. Keep going — you’re doing great!”

---

⚠️ IMPORTANT RULES (Apply to All Slides)
- No robotic tone — speak naturally, like you're mentoring someone 1-on-1.
- No unnecessary intros or outros outside of the first/last slide.
- Don’t assume prior knowledge — explain everything like it’s Day 1.
- End each slide with a **clear takeaway**.
- Keep your energy up — your confidence = their attention.
- add engaging the outro for the like, subscribe the video
---

🎯 GOAL: 
Make your viewer feel like:
> “Now I *finally* get it... and I can actually use this in real code.”

